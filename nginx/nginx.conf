## Nginx用の設定

# サーバーグループの定義（proxy_passのURLとして利用）
upstream api {
  # ソケット通信したいのでpuma.sockを指定
  server unix:///backend/tmp/sockets/puma.sock;
}

# サーバーの設定
server {
  # ポート番号
  listen 80;

  # サーバー名（ドメインもしくはIPを設定）
  server_name hayabusatrip.com www.hayabusatrip.com localhost;

  # ログ出力先
  access_log /var/log/nginx/hayabusatrip.com.access.log;
  error_log /var/log/nginx/hayabusatrip.com.error.log;

  # ドキュメントのルート設定
  root /backend/public;

  # リクエストボディサイズ（単位mはMB）
  client_max_body_size 100m;

  # エラーページのカスタマイズ
  error_page 404 /404.tsx;
  error_page 505 502 503 504 /500.tsx;

  # リクエストの受信とファイルチェック
  # 「$uri」はリクエストされたURL
  # 左から順にチェックして返すが、最後の記述はリダイレクト処理
  try_files $uri/index.tsx $uri @/;

  # HTTP通信のタイムアウト設定（何秒でタイムアウトするか）
  keepalive_timeout 5;

  # リバースプロキシ関連の設定
  location @/ {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_pass http://api;
  }

  # リバースプロキシ関連の設定(サードパーティのストレージアクセスをブロックするブラウザで signInWithRedirectを使用するための設定)
  location ~ ^/__/ {
    proxy_pass https://hayabusatrip-825fa.firebaseapp.com;
    proxy_redirect off;
    proxy_intercept_errors off;
    proxy_set_header Host hayabusatrip-825fa.firebaseapp.com;
  }
}